@using Hospital.Web.Models
@{
    ViewData["Title"] = "Patients";
}
@model PatientFilterViewModel;

<h2>Patients</h2>
<partial name="_PartientFilterPartial.cshtml" for="@Model" />
<div class="row">
    <div class="col-lg-12 text-right">
        <button type="button" class="btn btn-success ml-2" onClick="FilterData()">
            Filter
        </button>
        <button type="button" class="btn btn-warning ml-2" onClick="ClearFilter()">
            Clear
        </button>
        <button type="button" class="btn btn-primary ml-2" onclick="OpenCreateModal()">
            Create New
        </button>
    </div>
</div>
<div>
    <table id="grid"></table>
    <div id="pager"></div>
</div>
<!-- Modal -->
<div class="modal fade" id="patientModal" tabindex="-1" aria-hidden="true">
</div>
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
</div>
@section scripts {
    <script>
        var paramFilterObj = {};
        $(function () {
            //Date picker
            $('#filter-dob-date').datetimepicker({
                format: 'L'
            });
            $("#grid").jqGrid
                ({
                    url: "/Patient/GetDataGrid",
                    datatype: 'json',
                    mtype: 'Get',
                    postData: {
                        filter: {
                            ChartNumber: function () { return paramFilterObj.ChartNumber },
                            FirstName: function () { return paramFilterObj.FirstName },
                            LastName: function () { return paramFilterObj.LastName },
                            Gender: function () { return paramFilterObj.Gender },
                            Dob: function () { return paramFilterObj.Dob },
                            Phone: function () { return paramFilterObj.Phone },
                            Email: function () { return paramFilterObj.Email },
                            Address: function () { return paramFilterObj.Address },
                            WardCode: function () { return paramFilterObj.WardCode },
                            DistrictCode: function () { return paramFilterObj.DistrictCode },
                            ProvinceCode: function () { return paramFilterObj.ProvinceCode },
                        }
                    },
                    colModel: [
                        { label: "Id", name: "id", hidden: true },
                        { label: "Chart Number", name: "chartNumber" },
                        { label: "First Name", name: "firstName" },
                        { label: "Last Name", name: "lastName" },
                        { label: "Gender", name: "gender" },
                        { label: "Date of birth", name: "dob", formatter: 'date', formatoptions: { newformat: 'd/m/Y' } },
                        { label: "Phone", name: "phone" },
                        { label: "Email", name: "email" },
                        { label: "Address", name: "address" },
                        {
                            label: "Actions", formatter: function (cellvalue, options, rowobject) {
                                return '<div class="text-center">'
                                    + '<button type="button" class="btn btn-info ml-2" onClick=OpenEditModal(' + rowobject.id + ')>Edit</button>'
                                    + '<button type="button" class="btn btn-danger ml-2" onClick=OpenDeleteConfirmModalDialog(' + rowobject.id + ',"' + rowobject.chartNumber + '")>Delete</button>'
                                    + '</div>';
                            }
                        }
                    ],
                    pager: jQuery('#pager'),
                    height: '100%',
                    autowidth: true,
                    rowNum: 10,
                    rowList: [10, 20, 30, 50],
                    viewrecords: true,
                    beforeRequest: function () {
                        GetDataFilter();
                    }
                })
        })

        function GetDataFilter() {
            $.each($('#filter-form').serializeArray(), function (_, kv) {
                paramFilterObj[kv.name] = kv.value;
            });
        }

        function ReloadGrid() {
            jQuery("#grid")
                .trigger("reloadGrid");
        }

        function FilterData() {
            ReloadGrid();
        }

        function ClearFilter() {
            $('#filter-form')[0].reset();
            ReloadGrid();
        }

        function OpenCreateModal() {
            $.ajax({
                type: "GET",
                url: "/Patient/OpenModalDialog",
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    $("#patientModal").html(response);
                    //Date picker
                    $('#info-dob-date').datetimepicker({
                        format: 'L'
                    });
                    $("#patientModal").modal('show');
                },
                error: function (response) {
                    toastr.error("Internal Server Error!!!");
                }
            });
        }

        function OpenEditModal(id) {
            $.ajax({
                type: "GET",
                url: "/Patient/OpenModalDialog",
                contentType: "application/json; charset=utf-8",
                data: {
                    IsEdit: true,
                    Id: id
                },
                dataType: "html",
                success: function (response) {
                    $("#patientModal").html(response);
                    //Date picker
                    $('#info-dob-date').datetimepicker({
                        format: 'L'
                    });
                    $("#patientModal").modal('show');
                },
                error: function (response) {
                    toastr.error(response.responseText);
                }
            });
        }

        function OpenDeleteConfirmModalDialog(id, chartNumber) {
            $.ajax({
                type: "GET",
                url: "/Patient/OpenDeleteConfirmModalDialog",
                contentType: "application/json; charset=utf-8",
                data: {
                    Id: id,
                    ChartNumber: chartNumber,
                },
                dataType: "html",
                success: function (response) {
                    $("#patientModal").html(response);
                    $("#patientModal").modal('show');
                },
                error: function (response) {
                    toastr.error("Internal Server Error!!!");
                }
            });
        }

        function Delete(id) {
            $.ajax({
                url: '/Patient/Delete?Id=' + id,
                type: 'DELETE',
                success: function (response) {
                    if (response == null || response == undefined) {
                        toastr.error("Response not found!!!");
                    }
                    else if (response.length > 0) {
                        for (let message of response) {
                            toastr.error(message);
                        }
                    }
                    else {
                        toastr.success("Deleted successfully.");
                        $("#patientModal").modal('hide');
                        $('#grid').trigger('reloadGrid');
                    }
                },
                error: function (response) {
                    toastr.error("Internal Server Error!!!");
                }
            });
        }

        function Save(isEdit, id) {
            var formData = $("#form-info").serialize();
            if (isEdit) {
                $.ajax({
                    url: '/Patient/Update?Id=' + id,
                    type: 'PUT',
                    data: formData,
                    success: function (response) {
                        if (response == null || response == undefined) {
                            toastr.error("Response not found!!!");
                        }
                        else if (response.length > 0) {
                            for (let message of response) {
                                toastr.error(message);
                            }
                        }
                        else {
                            toastr.success("Updated successfully.");
                            $("#patientModal").modal('hide');
                            $('#grid').trigger('reloadGrid');
                        }
                    },
                    error: function (response) {
                        toastr.error("Internal Server Error!!!");
                    }
                });
            }
            else {
                $.ajax({
                    url: '/Patient/Create',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response == null || response == undefined) {
                            toastr.error("Response not found!!!");
                        }
                        else if (response.length > 0) {
                            for (let message of response) {
                                toastr.error(message);
                            }
                        }
                        else {
                            toastr.success("Created successfully.");
                            $("#patientModal").modal('hide');
                            $('#grid').trigger('reloadGrid');
                        }
                    },
                    error: function (response) {
                        toastr.error("Internal Server Error!!!");
                    }
                });
            }
        }
    </script>
}
